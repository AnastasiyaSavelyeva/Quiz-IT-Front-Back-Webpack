[
  {
    "id": 1,
    "name": "Тест №1. \"JavaScript: Начальный уровень\"",
    "questions": [
      {
        "id": 1,
        "question": "Где верно указан запуск всплывающего окна?",
        "answers": [
          {
            "id": 1,
            "answer": "info (\"Hi\")"
          },
          {
            "id": 2,
            "answer": "alert (\"Hi\")"
          },
          {
            "id": 3,
            "answer": "Нет верных вариантов"
          },
          {
            "id": 4,
            "answer": "new alert (\"Hi\")"
          }
        ]
      },
      {
        "id": 2,
        "question": "Что такое объект?",
        "answers": [
          {
            "id": 5,
            "answer": "Структура данных, хранящая в себе данные в виде ключ-значение\t"
          },
          {
            "id": 6,
            "answer": "Структура данных, хранящая в себе данные с численными ключами по умолчанию, где ключи начинаются с нуля"
          },
          {
            "id": 7,
            "answer": "Тип данных, представляющий из себя стандартный набор функций в javascript"
          },
          {
            "id": 8,
            "answer": "Тип данных для пустого значения"
          },
          {
            "id": 9,
            "answer": "Структура данных, хранящая в себе данные в виде массива"
          },
          {
            "id": 10,
            "answer": "Структура числовых данных"
          }
        ]
      },
      {
        "id": 3,
        "question": "Как называется тип данных для хранения строк?",
        "answers": [
          {
            "id": 11,
            "answer": "String"
          },
          {
            "id": 12,
            "answer": "Stroke"
          },
          {
            "id": 13,
            "answer": "Int"
          },
          {
            "id": 14,
            "answer": "Float"
          }
        ]
      },
      {
        "id": 4,
        "question": "Что такое массив?",
        "answers": [
          {
            "id": 15,
            "answer": "Структура данных, хранящая в себе данные в виде ключ-значение"
          },
          {
            "id": 16,
            "answer": "Структура данных, хранящая в себе данные с численными ключами по умолчанию, где ключи начинаются с нуля"
          },
          {
            "id": 17,
            "answer": "Тип данных, представляющий из себя стандартный набор функций в javascript"
          },
          {
            "id": 18,
            "answer": "Тип данных для пустого значения"
          }
        ]
      },
      {
        "id": 5,
        "question": "Имеется массив array с элементами 2, 3, 4. Как изменить второе значение 3 на 5?",
        "answers": [
          {
            "id": 19,
            "answer": "array[3] = 5;"
          },
          {
            "id": 20,
            "answer": "array[1] = 5;"
          },
          {
            "id": 21,
            "answer": "array[2] = 5;"
          },
          {
            "id": 22,
            "answer": "array.2 = 5;"
          }
        ]
      },
      {
        "id": 6,
        "question": "Какие циклы есть в языке JavaScript?",
        "answers": [
          {
            "id": 23,
            "answer": "for, while, do while"
          },
          {
            "id": 24,
            "answer": "for, forMap, foreach, while"
          },
          {
            "id": 25,
            "answer": "for, forMap, foreach, while, do while"
          },
          {
            "id": 26,
            "answer": "for, while, do while, foreach"
          }
        ]
      }
    ]
  },
  {
    "id": 2,
    "name": "Тест №2. \"JavaScript: Продвинутый уровень\"",
    "questions": [
      {
        "id": 7,
        "question": "Что такое ECMAScript?",
        "answers": [
          {
            "id": 27,
            "answer": "Новый язык программирования."
          },
          {
            "id": 28,
            "answer": "Переработанная реализация Javascript."
          },
          {
            "id": 29,
            "answer": "Спецификация языка Javascript."
          }
        ]
      },
      {
        "id": 8,
        "question": "Есть ли разница между вызовами i++ и ++i?",
        "answers": [
          {
            "id": 30,
            "answer": "Разница в значении, которое возвращает такой вызов."
          },
          {
            "id": 31,
            "answer": "Разница в значении i после вызова."
          },
          {
            "id": 32,
            "answer": "Нет никакой разницы."
          }
        ]
      },
      {
        "id": 9,
        "question": "В чем разница между confirm и prompt?",
        "answers": [
          {
            "id": 33,
            "answer": "confirm вызывает диалоговое окно с полем для ввода, prompt - окно с подтверждением"
          },
          {
            "id": 34,
            "answer": "Они ничем не отличаются"
          },
          {
            "id": 35,
            "answer": "prompt вызывает диалоговое окно с полем для ввода, confirm - окно с подтверждением"
          }
        ]
      },
      {
        "id": 10,
        "question": "Расшифруйте аббревиатуру DOM",
        "answers": [
          {
            "id": 36,
            "answer": "Document Object Model"
          },
          {
            "id": 37,
            "answer": "Digital Optical Modulation"
          },
          {
            "id": 38,
            "answer": "Domestic Object Mode"
          }
        ]
      },
      {
        "id": 11,
        "question": "Какие ключевые слова используются в JavaScript для того, чтобы объявить переменную?",
        "answers": [
          {
            "id": 39,
            "answer": "var, let, const"
          },
          {
            "id": 40,
            "answer": "byte, short, int, long, float"
          },
          {
            "id": 41,
            "answer": "int, short,var"
          }
        ]
      }
    ]
  },
  {
    "id": 3,
    "name": "Тест №3. \"JavaScript: Профессиональный уровень\"",
    "questions": [
      {
        "id": 12,
        "question": "Что такое hoisting в JavaScript?",
        "answers": [
          {
            "id": 42,
            "answer": "Это механизм в JavaScript, в котором переменные и объявления функций передвигаются вверх своей области видимости перед тем, как код будет выполнен"
          },
          {
            "id": 43,
            "answer": "Это объект, который хранит все переменные и функции"
          },
          {
            "id": 44,
            "answer": "Это механизм в JavaScript, который позволяет использовать глобальные переменные везде"
          },
          {
            "id": 45,
            "answer": "Это услуга по предоставлению ресурсов для размещения информации на сервере, постоянно находящемся в сети"
          }
        ]
      },
      {
        "id": 13,
        "question": "Расшифруйте аббревиатуру API",
        "answers": [
          {
            "id": 46,
            "answer": "Analog Program Interface"
          },
          {
            "id": 47,
            "answer": "Application Programming Interface"
          },
          {
            "id": 48,
            "answer": "Application Property Interface"
          },
          {
            "id": 49,
            "answer": "Academy Provide Infinite"
          }
        ]
      },
      {
        "id": 14,
        "question": "Какое API предоставляет клиенту функциональность для обмена данными между клиентом и сервером? Данный API предоставляет простой способ получения данных по ссылке без перезагрузки страницы.",
        "answers": [
          {
            "id": 50,
            "answer": "PerformancePaintTiming"
          },
          {
            "id": 51,
            "answer": "NavigatorStorage"
          },
          {
            "id": 52,
            "answer": "XMLHttpRequest"
          },
          {
            "id": 53,
            "answer": "AjaxRequest"
          }
        ]
      },
      {
        "id": 15,
        "question": "Этот метод разбивает строку на подстроки, используя заданный разделитель, и возвращает их в виде массива.",
        "answers": [
          {
            "id": 54,
            "answer": "filter( )"
          },
          {
            "id": 55,
            "answer": "split( )"
          },
          {
            "id": 56,
            "answer": "parseInt( )"
          },
          {
            "id": 57,
            "answer": "join( )"
          }
        ]
      },
      {
        "id": 16,
        "question": "Метод, который округляет аргумент до ближайшего большего целого",
        "answers": [
          {
            "id": 58,
            "answer": "Math.ceil( )"
          },
          {
            "id": 59,
            "answer": "Math.floor( )"
          },
          {
            "id": 60,
            "answer": "Math.round( )"
          },
          {
            "id": 61,
            "answer": "Math.number( )"
          }
        ]
      }
    ]
  }
]